trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "6bd5f3e2-adab-480c-a88f-7bfc9faf670a"
  imageRepository: "wordapi"
  containerRegistry: "wordapiacr.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  acrSubscription: "word-api-resources"
  acrResourceGroup: "word-api-resources"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          - upload: manifests
            artifact: manifests

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: "wordapi-9192.default"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: HelmInstaller@1
                  displayName: "Install Helm"
                  inputs:
                    helmVersionToInstall: "latest"

                - task: HelmDeploy@0
                  displayName: "Deploy to Kubernetes cluster using Helm"
                  inputs:
                    azureSubscriptionForACR: ${acrSubscription}
                    azureResourceGroupForACR: ${acrResourceGroup}
                    azureContainerRegistry: ${containerRegistry}
                    connectionType: "Kubernetes Service Connection"
                    kubernetesServiceConnection: "word-api-aks-default"
                    namespace: "default"
                    command: "upgrade"
                    chartType: "FilePath"
                    chartPath: "word-api/helm"
                    releaseName: "wordapi"
                    valueFile: "word-api/helm/values.yaml"
